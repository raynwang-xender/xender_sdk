cn.xender.core.a -> cn.xender.core.a:
    android.content.Context a -> a
    android.os.Handler b -> b
    boolean d -> c
    android.content.ServiceConnection e -> d
    void <init>(android.content.Context) -> <init>
    void a() -> a
    void b() -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
cn.xender.core.ap.BaseCreateApWorker -> cn.xender.core.ap.a:
    android.os.Handler a -> a
    cn.xender.core.ap.a.m j -> j
    android.net.wifi.WifiManager k -> k
    java.lang.String b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    cn.xender.core.ap.CoreCreateApCallback e -> e
    java.util.Timer l -> l
    boolean m -> m
    java.util.concurrent.atomic.AtomicBoolean f -> f
    java.util.concurrent.atomic.AtomicBoolean n -> n
    cn.xender.core.ap.BaseCreateApWorker$ApStatusReceiver g -> g
    int h -> h
    int i -> i
    void <init>(android.content.Context) -> <init>
    boolean j() -> a
    void a(java.lang.String,java.lang.String,long,int,cn.xender.core.ap.CoreCreateApCallback) -> a
    void b(java.lang.String,java.lang.String,long,int,cn.xender.core.ap.CoreCreateApCallback) -> b
    int k() -> b
    void b() -> c
    void l() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    android.net.wifi.WifiManager m() -> g
    cn.xender.core.ap.a.m n() -> h
    void b(java.lang.String,java.lang.String) -> a
    void a(java.lang.Runnable) -> a
    void b(java.lang.Runnable) -> b
    void a(long) -> a
    void c(java.lang.String,java.lang.String) -> b
    void r() -> l
    void a() -> i
    void h() -> j
    void p() -> k
    void <clinit>() -> <clinit>
cn.xender.core.ap.BaseCreateApWorker$ApStatusReceiver -> cn.xender.core.ap.b:
    cn.xender.core.ap.p a -> a
    cn.xender.core.ap.BaseCreateApWorker b -> b
    void <init>(cn.xender.core.ap.BaseCreateApWorker) -> <init>
    void b() -> a
    void e() -> b
cn.xender.core.ap.CoreApManager -> cn.xender.core.ap.CoreApManager:
    cn.xender.core.ap.ab scanApWorker -> scanApWorker
    cn.xender.core.ap.JoinApWorker joinApWorker -> joinApWorker
    cn.xender.core.ap.u createApWorker -> createApWorker
    android.content.Context applicationContext -> applicationContext
    cn.xender.core.a httpServerStart -> httpServerStart
    int DEFAULT_CREATE_TIMEOUT -> DEFAULT_CREATE_TIMEOUT
    cn.xender.core.ap.CoreApManager instance -> instance
    void <init>() -> <init>
    cn.xender.core.ap.CoreApManager getInstance() -> getInstance
    void initApplicationContext(android.content.Context) -> initApplicationContext
    void setSSIDFilterForRestore(cn.xender.core.ap.z) -> setSSIDFilterForRestore
    void createAp(int,cn.xender.core.ap.CoreCreateApCallback) -> createAp
    void createAp(java.lang.String,java.lang.String,long,int,cn.xender.core.ap.CoreCreateApCallback) -> createAp
    int getCreateRequestCode() -> getCreateRequestCode
    void retryCreateAp(java.lang.String,java.lang.String,long,int,cn.xender.core.ap.CoreCreateApCallback) -> retryCreateAp
    void shutdownAp() -> shutdownAp
    boolean isApEnabled() -> isApEnabled
    void createFailed() -> createFailed
    java.lang.String getApName() -> getApName
    java.lang.String getApPassword() -> getApPassword
    void startScanAp(cn.xender.core.ap.z,cn.xender.core.ap.y,long,cn.xender.core.ap.t,int) -> startScanAp
    void stopScanAp() -> stopScanAp
    void joinAp(cn.xender.core.ap.ad,java.lang.String,java.lang.String,long,cn.xender.core.ap.s) -> joinAp
    void cancelDiscoveryBluetooth() -> cancelDiscoveryBluetooth
    void checkContext() -> checkContext
    cn.xender.core.ap.u getCreateApWorker() -> getCreateApWorker
    cn.xender.core.ap.ab getScanApWorker() -> getScanApWorker
    cn.xender.core.ap.JoinApWorker getJoinApWorker() -> getJoinApWorker
    cn.xender.core.a getHttpServerStart() -> getHttpServerStart
    void <clinit>() -> <clinit>
cn.xender.core.ap.CoreCreateApCallback -> cn.xender.core.ap.CoreCreateApCallback:
    void callback(cn.xender.core.ap.CreateApEvent) -> callback
cn.xender.core.ap.CreateApEvent -> cn.xender.core.ap.CreateApEvent:
    int CREATE_ERROR -> CREATE_ERROR
    int OFF -> OFF
    int SAVED_25_CONFIG -> SAVED_25_CONFIG
    int AP_ENABLED_25 -> AP_ENABLED_25
    int CREATE_OK_BUT_NO_IP_ON25 -> CREATE_OK_BUT_NO_IP_ON25
    int CREATE_OK -> CREATE_OK
    int type -> type
    java.lang.String apIp -> apIp
    java.lang.String ssid -> ssid
    int requestCode -> requestCode
    java.lang.String url -> url
    java.lang.String password -> password
    void <init>(int,int) -> <init>
    void <init>(int,java.lang.String,java.lang.String,int,java.lang.String) -> <init>
    void <init>(int,java.lang.String,int) -> <init>
    cn.xender.core.ap.CreateApEvent errorEvent(int) -> errorEvent
    cn.xender.core.ap.CreateApEvent okEvent(java.lang.String,java.lang.String,int,java.lang.String) -> okEvent
    cn.xender.core.ap.CreateApEvent offEvent(int) -> offEvent
    cn.xender.core.ap.CreateApEvent save25ConfigEvent(int) -> save25ConfigEvent
    cn.xender.core.ap.CreateApEvent apEnabled25Event(int) -> apEnabled25Event
    cn.xender.core.ap.CreateApEvent okButNoIpOn25(int) -> okButNoIpOn25
    int getRequestCode() -> getRequestCode
    java.lang.String getUrl() -> getUrl
    boolean isOk() -> isOk
    boolean isOff() -> isOff
    boolean isError() -> isError
    boolean isNeedUserManualOpen() -> isNeedUserManualOpen
    boolean isManualOpenSuccess() -> isManualOpenSuccess
    boolean isOpendButWeCannotUseAndNeedRetry() -> isOpendButWeCannotUseAndNeedRetry
cn.xender.core.ap.JoinApWorker -> cn.xender.core.ap.c:
    android.net.wifi.WifiManager c -> b
    java.util.concurrent.atomic.AtomicBoolean d -> c
    cn.xender.core.ap.s e -> d
    int f -> e
    android.content.Context g -> f
    java.util.Timer h -> g
    boolean i -> h
    cn.xender.core.ap.JoinApWorker$NetWorkStatusReceiver a -> a
    void <init>(android.content.Context) -> <init>
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,cn.xender.core.ap.s) -> a
    void <clinit>() -> <clinit>
cn.xender.core.ap.JoinApWorker$NetWorkStatusReceiver -> cn.xender.core.ap.d:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    void a() -> a
cn.xender.core.ap.a -> cn.xender.core.ap.e:
    void <init>(android.content.Context) -> <init>
    void a() -> i
    void b() -> c
cn.xender.core.ap.a.b -> cn.xender.core.ap.a.a:
    void a(android.content.Context) -> a
    android.bluetooth.BluetoothManager b(android.content.Context) -> b
    android.bluetooth.BluetoothAdapter c(android.content.Context) -> c
cn.xender.core.ap.a.f -> cn.xender.core.ap.a.b:
    cn.xender.core.ap.z a -> a
    void a(cn.xender.core.ap.z) -> a
    boolean a(java.lang.String) -> a
cn.xender.core.ap.a.g -> cn.xender.core.ap.a.c:
    void b(android.content.Context) -> a
cn.xender.core.ap.a.h -> cn.xender.core.ap.a.d:
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
cn.xender.core.ap.a.i -> cn.xender.core.ap.a.e:
    cn.xender.core.ap.a.i a -> a
    cn.xender.core.ap.a.i b -> b
    cn.xender.core.ap.a.i c -> c
    cn.xender.core.ap.a.i d -> d
    cn.xender.core.ap.a.i e -> e
    cn.xender.core.ap.a.i[] f -> f
    cn.xender.core.ap.a.i[] values() -> values
    cn.xender.core.ap.a.i valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
cn.xender.core.ap.a.j -> cn.xender.core.ap.a.f:
    boolean a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int a(android.content.Context,android.net.wifi.WifiManager) -> a
    boolean f(android.content.Context) -> c
    java.lang.String g(android.content.Context) -> d
    java.lang.String h(android.content.Context) -> e
    java.lang.String i(android.content.Context) -> f
    boolean a(java.net.InetAddress,android.content.Context) -> a
    boolean a(android.net.wifi.WifiManager) -> a
cn.xender.core.ap.a.l -> cn.xender.core.ap.a.g:
    java.lang.Object a(java.lang.Object,java.lang.String) -> a
cn.xender.core.ap.a.m -> cn.xender.core.ap.a.h:
    android.content.Context d -> d
    android.net.wifi.WifiManager e -> e
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.Boolean f -> f
    boolean g -> g
    java.util.Map h -> h
    boolean a() -> a
    boolean b() -> b
    java.lang.String f() -> f
    void <init>(android.content.Context,android.net.wifi.WifiManager) -> <init>
    void a(android.content.Context) -> a
    java.lang.String c() -> c
    boolean a(boolean,android.net.wifi.WifiManager$LocalOnlyHotspotCallback) -> a
    cn.xender.core.ap.a.i d() -> d
    boolean e() -> e
    android.net.wifi.WifiConfiguration a(android.net.wifi.WifiManager) -> a
    android.net.wifi.WifiConfiguration a(android.net.wifi.WifiConfiguration) -> a
    void g() -> g
    void <clinit>() -> <clinit>
cn.xender.core.ap.ab -> cn.xender.core.ap.f:
    cn.xender.core.ap.a.m a -> a
    android.net.wifi.WifiManager b -> b
    java.util.concurrent.atomic.AtomicBoolean c -> c
    cn.xender.core.ap.t d -> d
    void <init>(android.content.Context) -> <init>
    void a(cn.xender.core.ap.z,cn.xender.core.ap.y,long,cn.xender.core.ap.t,int) -> a
    void a() -> a
    void <clinit>() -> <clinit>
cn.xender.core.ap.ac -> cn.xender.core.ap.g:
    cn.xender.core.ap.z c -> c
    cn.xender.core.ap.y d -> d
    int e -> e
    long a -> a
    cn.xender.core.ap.ab b -> b
    void <init>(cn.xender.core.ap.ab,cn.xender.core.ap.z,cn.xender.core.ap.y,long,int) -> <init>
cn.xender.core.ap.ad -> cn.xender.core.ap.h:
    java.lang.String b -> a
    java.lang.String d -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
cn.xender.core.ap.b -> cn.xender.core.ap.i:
    cn.xender.core.ap.a a -> a
    void <init>(cn.xender.core.ap.a) -> <init>
cn.xender.core.ap.c -> cn.xender.core.ap.j:
    void <init>(android.content.Context) -> <init>
    void a() -> i
    void a(long) -> a
    void b() -> c
    boolean r() -> l
cn.xender.core.ap.d -> cn.xender.core.ap.k:
    cn.xender.core.ap.c a -> a
    void <init>(cn.xender.core.ap.c) -> <init>
cn.xender.core.ap.e -> cn.xender.core.ap.l:
    android.content.ServiceConnection k -> j
    boolean l -> k
    android.os.Messenger m -> l
    void b() -> c
    java.lang.String e() -> e
    java.lang.String f() -> f
    void <init>(android.content.Context) -> <init>
    void h() -> j
    void r() -> l
cn.xender.core.ap.h -> cn.xender.core.ap.m:
    cn.xender.core.ap.e a -> a
    void <init>(cn.xender.core.ap.e,android.os.Looper) -> <init>
cn.xender.core.ap.i -> cn.xender.core.ap.n:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.xender.core.ap.BaseCreateApWorker c -> c
    void <init>(cn.xender.core.ap.BaseCreateApWorker,java.lang.String,java.lang.String) -> <init>
cn.xender.core.ap.j -> cn.xender.core.ap.o:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.xender.core.ap.BaseCreateApWorker c -> c
    void <init>(cn.xender.core.ap.BaseCreateApWorker,java.lang.String,java.lang.String) -> <init>
cn.xender.core.ap.k -> cn.xender.core.ap.p:
    java.lang.Runnable a -> a
    cn.xender.core.ap.BaseCreateApWorker b -> b
    void <init>(cn.xender.core.ap.BaseCreateApWorker,java.lang.Runnable) -> <init>
cn.xender.core.ap.l -> cn.xender.core.ap.q:
    java.lang.Runnable a -> a
    cn.xender.core.ap.BaseCreateApWorker b -> b
    void <init>(cn.xender.core.ap.BaseCreateApWorker,java.lang.Runnable) -> <init>
cn.xender.core.ap.m -> cn.xender.core.ap.r:
    cn.xender.core.ap.BaseCreateApWorker a -> a
    void <init>(cn.xender.core.ap.BaseCreateApWorker) -> <init>
cn.xender.core.ap.p -> cn.xender.core.ap.s:
    cn.xender.core.ap.p a -> a
    cn.xender.core.ap.p b -> b
    cn.xender.core.ap.p c -> c
    cn.xender.core.ap.p d -> d
    cn.xender.core.ap.p e -> e
    cn.xender.core.ap.p f -> f
    cn.xender.core.ap.p[] g -> g
    cn.xender.core.ap.p[] values() -> values
    cn.xender.core.ap.p valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
cn.xender.core.ap.q -> cn.xender.core.ap.t:
    cn.xender.core.ap.CoreCreateApCallback a -> a
    cn.xender.core.ap.CoreApManager b -> b
    void <init>(cn.xender.core.ap.CoreApManager,cn.xender.core.ap.CoreCreateApCallback) -> <init>
    void callback(cn.xender.core.ap.CreateApEvent) -> callback
cn.xender.core.ap.r -> cn.xender.core.ap.u:
    cn.xender.core.ap.CoreCreateApCallback a -> a
    cn.xender.core.ap.CoreApManager b -> b
    void <init>(cn.xender.core.ap.CoreApManager,cn.xender.core.ap.CoreCreateApCallback) -> <init>
    void callback(cn.xender.core.ap.CreateApEvent) -> callback
cn.xender.core.ap.s -> cn.xender.core.ap.v:
cn.xender.core.ap.service.OAPService -> cn.xender.core.ap.service.OAPService:
    int MSG_OPEN_AP -> MSG_OPEN_AP
    int MSG_GET_AP_INFO -> MSG_GET_AP_INFO
    java.lang.String ssid -> ssid
    java.lang.String password -> password
    boolean openFailed -> openFailed
    android.os.Messenger mMessenger -> mMessenger
    android.net.wifi.WifiManager$LocalOnlyHotspotReservation reservation -> reservation
    android.net.wifi.WifiManager$LocalOnlyHotspotCallback callback -> callback
    android.net.wifi.WifiManager wifiManager -> wifiManager
    cn.xender.core.ap.a.m wifiApManager -> wifiApManager
    void <init>() -> <init>
    void replyToClientMessage(android.os.Message,android.os.Bundle) -> replyToClientMessage
    android.net.wifi.WifiManager getWifiManager() -> getWifiManager
    cn.xender.core.ap.a.m getWifiApManager() -> getWifiApManager
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    android.net.wifi.WifiManager$LocalOnlyHotspotCallback access$000(cn.xender.core.ap.service.OAPService) -> access$000
    void access$100(cn.xender.core.ap.service.OAPService,android.os.Message,android.os.Bundle) -> access$100
    java.lang.String access$200(cn.xender.core.ap.service.OAPService) -> access$200
    java.lang.String access$300(cn.xender.core.ap.service.OAPService) -> access$300
    boolean access$400(cn.xender.core.ap.service.OAPService) -> access$400
    android.net.wifi.WifiManager$LocalOnlyHotspotReservation access$602(cn.xender.core.ap.service.OAPService,android.net.wifi.WifiManager$LocalOnlyHotspotReservation) -> access$602
    java.lang.String access$302(cn.xender.core.ap.service.OAPService,java.lang.String) -> access$302
    java.lang.String access$202(cn.xender.core.ap.service.OAPService,java.lang.String) -> access$202
    boolean access$402(cn.xender.core.ap.service.OAPService,boolean) -> access$402
cn.xender.core.ap.service.a -> cn.xender.core.ap.service.a:
    cn.xender.core.ap.service.OAPService a -> a
    void <init>(cn.xender.core.ap.service.OAPService) -> <init>
cn.xender.core.ap.service.b -> cn.xender.core.ap.service.b:
    cn.xender.core.ap.service.OAPService a -> a
    void <init>(cn.xender.core.ap.service.OAPService) -> <init>
    void <init>(cn.xender.core.ap.service.OAPService,cn.xender.core.ap.service.a) -> <init>
cn.xender.core.ap.t -> cn.xender.core.ap.w:
cn.xender.core.ap.u -> cn.xender.core.ap.x:
    boolean j() -> a
    void a(java.lang.String,java.lang.String,long,int,cn.xender.core.ap.CoreCreateApCallback) -> a
    void b(java.lang.String,java.lang.String,long,int,cn.xender.core.ap.CoreCreateApCallback) -> b
    int k() -> b
    void b() -> c
    void l() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
cn.xender.core.ap.x -> cn.xender.core.ap.y:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    cn.xender.core.ap.JoinApWorker g -> g
    void <init>(cn.xender.core.ap.JoinApWorker,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> <init>
cn.xender.core.ap.y -> cn.xender.core.ap.z:
cn.xender.core.ap.z -> cn.xender.core.ap.aa:
    boolean a(java.lang.String) -> a
cn.xender.core.b -> cn.xender.core.b:
    cn.xender.core.a a -> a
    void <init>(cn.xender.core.a) -> <init>
cn.xender.core.c -> cn.xender.core.c:
    android.content.SharedPreferences a(android.content.Context) -> a
    boolean b(android.content.Context,java.lang.String,boolean) -> a
cn.xender.core.log.Logger -> cn.xender.core.log.Logger:
    boolean r -> r
    void <init>() -> <init>
    void c(java.lang.String,java.lang.String) -> c
    void ce(java.lang.String,java.lang.String) -> ce
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void e(java.lang.String,java.lang.String) -> e
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void <clinit>() -> <clinit>
cn.xender.core.server.ae -> cn.xender.core.server.a:
cn.xender.core.server.f -> cn.xender.core.server.b:
    java.lang.String a -> a
    java.util.Map b -> b
    android.content.Context c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String a() -> a
    java.lang.String c(java.lang.String) -> a
    void <init>(android.content.Context,java.lang.String,int,java.lang.String) -> <init>
    java.io.File a(android.content.Context,java.lang.String) -> a
    java.io.File a(android.content.Context) -> a
    void b() -> b
    void <clinit>() -> <clinit>
cn.xender.core.server.g -> cn.xender.core.server.c:
    void <init>() -> <init>
cn.xender.core.server.h -> cn.xender.core.server.d:
    java.util.concurrent.ExecutorService a -> a
    cn.xender.core.server.f b -> b
    void <init>(cn.xender.core.server.f) -> <init>
cn.xender.core.server.l -> cn.xender.core.server.e:
    java.lang.String a -> a
    int b -> b
    java.net.ServerSocket c -> c
    java.util.Set d -> d
    java.lang.Thread e -> e
    cn.xender.core.server.o f -> f
    cn.xender.core.server.ae g -> g
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    void d(java.net.Socket) -> a
    void a(java.net.ServerSocket) -> a
    void c() -> c
    void d() -> d
    void e() -> e
    boolean f() -> f
    boolean g() -> g
    void a(cn.xender.core.server.o) -> a
    void a(cn.xender.core.server.ae) -> a
cn.xender.core.server.m -> cn.xender.core.server.f:
    cn.xender.core.server.l a -> a
    void <init>(cn.xender.core.server.l) -> <init>
cn.xender.core.server.o -> cn.xender.core.server.g:
cn.xender.core.server.r -> cn.xender.core.server.h:
    void <init>() -> <init>
cn.xender.core.server.service.HttpServerService -> cn.xender.core.server.service.HttpServerService:
    java.lang.String TAG -> TAG
    cn.xender.core.server.f server -> server
    android.os.IBinder binder -> binder
    void <init>() -> <init>
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void initState() -> initState
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onTrimMemory(int) -> onTrimMemory
    cn.xender.core.server.f getServer() -> getServer
    void startServer() -> startServer
    void stopServer() -> stopServer
cn.xender.core.server.service.a -> cn.xender.core.server.service.a:
    cn.xender.core.server.service.HttpServerService a -> a
    void <init>(cn.xender.core.server.service.HttpServerService) -> <init>
cn.xender.core.server.u -> cn.xender.core.server.i:
    java.lang.String a -> a
    cn.xender.core.server.l b -> b
    void <init>(cn.xender.core.server.l,java.lang.String) -> <init>
cn.xender.core.server.utils.ActionListener -> cn.xender.core.server.utils.ActionListener:
    void someoneOnline() -> someoneOnline
    void someoneOffline() -> someoneOffline
    void transferSuccess() -> transferSuccess
    void transferFailure() -> transferFailure
cn.xender.core.server.utils.ActionProtocol -> cn.xender.core.server.utils.ActionProtocol:
    java.lang.String FRIENDS_ONLINE_INFO_ABOUT_ACTION -> FRIENDS_ONLINE_INFO_ABOUT_ACTION
    java.lang.String FRIENDS_OFFLINE_INFO_ABOUT_ACTION -> FRIENDS_OFFLINE_INFO_ABOUT_ACTION
    java.lang.String TRANSFER_SUCCESS_ACTION -> TRANSFER_SUCCESS_ACTION
    java.lang.String TRANSFER_FAILURE_ACTION -> TRANSFER_FAILURE_ACTION
    cn.xender.core.server.utils.ActionListener listener -> listener
    android.content.BroadcastReceiver receiver -> receiver
    void <init>() -> <init>
    void sendOnlineAction(android.content.Context) -> sendOnlineAction
    void sendOfflineAction(android.content.Context) -> sendOfflineAction
    void sendTransferSuccessAction(android.content.Context) -> sendTransferSuccessAction
    void sendTransferFailureAction(android.content.Context) -> sendTransferFailureAction
    void setActionListener(cn.xender.core.server.utils.ActionListener) -> setActionListener
    void register(android.app.Activity) -> register
    void unregister(android.app.Activity) -> unregister
    void initReceiver() -> initReceiver
    cn.xender.core.server.utils.ActionListener access$000(cn.xender.core.server.utils.ActionProtocol) -> access$000
cn.xender.core.server.utils.ActionProtocol$1 -> cn.xender.core.server.utils.a:
    cn.xender.core.server.utils.ActionProtocol a -> a
    void <init>(cn.xender.core.server.utils.ActionProtocol) -> <init>
cn.xender.core.server.utils.b -> cn.xender.core.server.utils.b:
    int a -> a
    void a(int) -> a
    int a() -> a
    void b() -> b
    void <clinit>() -> <clinit>
